resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
- name: status
  type: docker-image
  source:
    repository: resource/github-status
    tag: release

resources:
- name: src
  type: pull-request
  webhook_token: ((github.webhook-token))
  source:
    repository: ((pr-repo))
    access_token: ((github.access-token))
- name: status
  type: status
  source:
    access_token: ((github.access-token))
    repo: ((pr-repo))
- name: ci
  type: git
  source:
    uri: ((ci-repo))
    branch: ((ci-branch))
- name: docker.cf-operator-ci
  type: docker-image
  source:
    repository: ((docker-organization))/((docker-repo))
    username: ((dockerhub.username))
    password: ((dockerhub.password))
- name: s3.env-dump
  type: s3
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: env_dumps/env_dump-(.*).tar.gz


jobs:
- name: vet
  max_in_flight: 3
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    params:
      context: vet
      description: go vet check
      path: src
      state: pending
  - do:
    - task: vet
      file: ci/pipelines/tasks/vet.yml
      params:
        GOPROXY: ((goproxy))
    on_failure:
      put: status
      params:
        context: vet
        description: go vet check
        path: src
        state: failure
    on_success:
      put: status
      params:
        context: vet
        description: go vet check
        path: src
        state: success

- name: lint
  max_in_flight: 3
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    params:
      context: lint
      description: lint check
      path: src
      state: pending
  - do:
    - task: lint
      file: ci/pipelines/tasks/lint.yml
      params:
        GOPROXY: ((goproxy))
    on_failure:
      put: status
      params:
        context: lint
        description: go lint check
        path: src
        state: failure
    on_success:
      put: status
      params:
        context: lint
        description: go lint check
        path: src
        state: success

- name: staticcheck
  max_in_flight: 3
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    params:
      context: staticcheck
      description: staticcheck code.cloudfoundry.org/quarks-operator/...
      path: src
      state: pending
  - do:
    - task: staticcheck
      file: ci/pipelines/tasks/staticcheck.yml
      params:
        GOPROXY: ((goproxy))
    on_failure:
      put: status
      params:
        context: staticcheck
        description: staticcheck code.cloudfoundry.org/quarks-operator/...
        path: src
        state: failure
    on_success:
      put: status
      params:
        context: staticcheck
        description: staticcheck code.cloudfoundry.org/quarks-operator/...
        path: src
        state: success

- name: test
  max_in_flight: 2
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - aggregate:
    - put: status
      params:
        context: build
        description: go build check
        path: src
        state: pending
    - put: status
      params:
        context: test
        description: go test check
        path: src
        state: pending

  - do:
    - task: build
      file: ci/pipelines/tasks/build.yml
      params:
        GOPROXY: ((goproxy))
    - put: docker.cf-operator-ci
      params:
        build: src
        build_args:
          GOPROXY: ((goproxy))
        tag: docker/tag
    on_failure:
      put: status
      params:
        context: build
        description: go build check
        path: src
        state: failure
    on_success:
      put: status
      params:
        context: build
        description: go build check
        path: src
        state: success

  - do:
    - task: test
      file: ci/pipelines/tasks/test.yml
      params:
        GOPROXY: ((goproxy))
    - task: test-integration
      params:
        ibmcloud_apikey: ((ibmcloud.key-value))
        ibmcloud_server: ((ibmcloud.server))
        ibmcloud_region: ((ibmcloud.region))
        ibmcloud_cluster: ((ibmcloud.cluster-dino))
        ssh_server_ip: ((ssh-server.ip))
        ssh_server_user: ((ssh-server.user))
        ssh_server_key: ((ssh-server.key))
        OPERATOR_TEST_STORAGE_CLASS: ((storageclass))
        DOCKER_IMAGE_REPOSITORY: ((docker-repo))
        GOPROXY: ((goproxy))
        NODES: 6
      file: ci/pipelines/tasks/test-integration.yml
    - task: test-helm-e2e
      params:
        ibmcloud_apikey: ((ibmcloud.key-value))
        ibmcloud_server: ((ibmcloud.server))
        ibmcloud_region: ((ibmcloud.region))
        ibmcloud_cluster: ((ibmcloud.cluster-dino))
        ssh_server_ip: ((ssh-server.ip))
        ssh_server_user: ((ssh-server.user))
        ssh_server_key: ((ssh-server.key))
        DOCKER_IMAGE_REPOSITORY: ((docker-repo))
        OPERATOR_TEST_STORAGE_CLASS: ((storageclass))
        GOPROXY: ((goproxy))
      file: ci/pipelines/tasks/test-helm-e2e.yml
    on_failure:
      in_parallel:
      - put: s3.env-dump
        params:
          file: env_dumps/env_dump-*.tar.gz
          acl: public-read
      - put: status
        params:
          context: test
          description: go test check
          path: src
          state: failure
    on_success:
      put: status
      params:
        context: test
        description: go test check
        path: src
        state: success
