resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
- name: status
  type: docker-image
  source:
    repository: resource/github-status
    tag: release

resources:
- name: src
  type: pull-request
  check_every: 1m
  webhook_token: ((github.webhook-token))
  source:
    repository: ((pr-repo))
    access_token: ((github.access-token))
- name: status
  type: status
  source:
    access_token: ((github.access-token))
    repo: ((pr-repo))
- name: ci
  type: git
  source:
    uri: ((ci-repo))
    branch: ((ci-branch))
- name: docker.cf-operator-ci
  type: docker-image
  source:
    repository: ((docker-organization))/((docker-repo))
    username: ((dockerhub.username))
    password: ((dockerhub.password))
- name: s3.env-dump
  type: s3
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: env_dumps/env_dump-(.*).tar.gz
- name: s3.ginkgo-logs
  type: s3
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: ginkgo-logs/ginkgo-logs-(.*).tar.gz


jobs:
- name: lint
  max_in_flight: 3
  plan:
  - in_parallel:
    - get: ci
    - get: src
      trigger: true
  - put: status
    params:
      context: lint
      description: lint check
      path: src
      state: pending
  - do:
    - task: lint
      file: ci/pipelines/tasks/lint.yml
      params:
        GOPROXY: ((goproxy))
        SUCCEED_UNLESS_CHANGES_CONTAIN: '.*\.go$'
    on_failure:
      put: status
      params:
        context: lint
        description: go lint check
        path: src
        state: failure
    on_success:
      put: status
      params:
        context: lint
        description: go lint check
        path: src
        state: success
- name: test
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: ci
    - get: src
      trigger: true
  - in_parallel:
    - put: status
      params:
        context: build
        description: go build check
        path: src
        state: pending
    - put: status
      params:
        context: test
        description: go test check
        path: src
        state: pending

  - do:
    - task: build
      file: ci/pipelines/tasks/build.yml
      params:
        GOPROXY: ((goproxy))
    on_failure:
      put: status
      params:
        context: build
        description: go build check
        path: src
        state: failure
    on_success:
      in_parallel:
      - put: docker.cf-operator-ci
        params:
          build: src
          build_args:
            GOPROXY: ((goproxy))
          tag: docker/tag
      - put: status
        params:
          context: build
          description: go build check
          path: src
          state: success

  - in_parallel:
    - task: test
      file: ci/pipelines/tasks/test.yml
      params:
        GOPROXY: ((goproxy))
        SUCCEED_UNLESS_CHANGES_BEYOND: '^(docs/.*\.md|website/.*|\.github/.*)'
    - task: test-integration
      params:
        ibmcloud_apikey: ((ibmcloud.key-value))
        ibmcloud_server: ((ibmcloud.server))
        ibmcloud_region: ((ibmcloud.region))
        ibmcloud_cluster: ((ibmcloud-cluster))
        ssh_server_ip: ((ssh-server.ip))
        ssh_server_user: ((ssh-server.user))
        ssh_server_key: ((ssh-server.key))
        OPERATOR_TEST_STORAGE_CLASS: ((storageclass))
        DOCKER_IMAGE_REPOSITORY: ((docker-repo))
        GOPROXY: ((goproxy))
        NODES: 6
        SUCCEED_UNLESS_CHANGES_BEYOND: '^(docs/.*\.md|website/.*|\.github/.*)'
      file: ci/pipelines/tasks/test-integration.yml
    - task: test-helm-e2e
      params:
        ibmcloud_apikey: ((ibmcloud.key-value))
        ibmcloud_server: ((ibmcloud.server))
        ibmcloud_region: ((ibmcloud.region))
        ibmcloud_cluster: ((ibmcloud-cluster))
        ssh_server_ip: ((ssh-server.ip))
        ssh_server_user: ((ssh-server.user))
        ssh_server_key: ((ssh-server.key))
        DOCKER_IMAGE_REPOSITORY: ((docker-repo))
        OPERATOR_TEST_STORAGE_CLASS: ((storageclass))
        GOPROXY: ((goproxy))
        SUCCEED_UNLESS_CHANGES_BEYOND: '^(docs/.*\.md|website/.*|\.github/.*)'
      file: ci/pipelines/tasks/test-helm-e2e.yml
    on_failure:
      in_parallel:
      - put: s3.env-dump
        params:
          file: env_dumps/env_dump-*.tar.gz
          acl: public-read
      - do:
        - task: collect-logs
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: cfcontainerization/go-tools
                tag: latest
            inputs:
            - name: src
            run:
              path: /bin/bash
              args:
              - -c
              - |
                #!/bin/bash
                find /tmp -name ginkgo-node-1.log | grep -q "." || exit 0
                TARBALL_NAME="ginkgo-logs-$(date +"%s").tar.gz"
                tar cfzv src/env_dumps/"$TARBALL_NAME" src/**/ginkgo-node-*.log
        - put: s3.ginkgo-logs
          params:
            file: env_dumps/ginkgo-logs-(.*).tar.gz
            acl: public-read
      - put: status
        params:
          context: test
          description: go test check
          path: src
          state: failure
    on_success:
      put: status
      params:
        context: test
        description: go test check
        path: src
        state: success
