resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
- name: status
  type: docker-image
  source:
    repository: resource/github-status
    tag: release

resources:
- name: src
  type: pull-request
  tags: [containerization]
  webhook_token: ((github.webhook-token))
  source:
    repository: ((pr-repo))
    access_token: ((github.access-token))
- name: status
  type: status
  tags: [containerization]
  source:
    access_token: ((github.access-token))
    repo: ((pr-repo))
- name: ci
  type: git
  tags: [containerization]
  source:
    uri: ((ci-repo))
    branch: ((ci-branch))
- name: docker.cf-operator-ci
  type: docker-image
  tags: [containerization]
  source:
    repository: ((docker-organization))/((docker-repo))
    username: ((dockerhub.username))
    password: ((dockerhub.password))


jobs:
- name: vet
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    tags: [containerization]
    params:
      context: vet
      description: go vet check
      path: src
      state: pending
  - do:
    - task: vet
      tags: [containerization]
      file: ci/pipelines/tasks/vet.yml
    on_failure:
      put: status
      tags: [containerization]
      params:
        context: vet
        description: go vet check
        path: src
        state: failure
    on_success:
      put: status
      tags: [containerization]
      params:
        context: vet
        description: go vet check
        path: src
        state: success

- name: lint
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    tags: [containerization]
    params:
      context: lint
      description: lint check
      path: src
      state: pending
  - do:
    - task: lint
      tags: [containerization]
      file: ci/pipelines/tasks/lint.yml
    on_failure:
      put: status
      tags: [containerization]
      params:
        context: lint
        description: go lint check
        path: src
        state: failure
    on_success:
      put: status
      tags: [containerization]
      params:
        context: lint
        description: go lint check
        path: src
        state: success

- name: test
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    tags: [containerization]
    params:
      context: test
      description: go test check
      path: src
      state: pending
  - task: build
    tags: [containerization]
    file: ci/pipelines/tasks/build.yml
  - put: docker.cf-operator-ci
    params:
      build: src
      tag: docker/tag
  - do:
    - task: test
      tags: [containerization]
      file: ci/pipelines/tasks/test.yml
    - aggregate:
      - task: test-integration
        tags: [containerization]
        params:
          ibmcloud_apikey: ((ibmcloud.key-value))
          ibmcloud_server: ((ibmcloud.server))
          ibmcloud_region: ((ibmcloud.region))
          ibmcloud_cluster: ((ibmcloud.cluster))
          ssh_server_ip: ((ssh-server.ip))
          ssh_server_user: ((ssh-server.user))
          ssh_server_key: ((ssh-server.key))
          OPERATOR_TEST_STORAGE_CLASS: ((storageclass))
          DOCKER_IMAGE_REPOSITORY: ((docker-repo))
        file: ci/pipelines/tasks/test-integration.yml
    on_failure:
      put: status
      tags: [containerization]
      params:
        context: test
        description: go test check
        path: src
        state: failure
    on_success:
      put: status
      tags: [containerization]
      params:
        context: test
        decription: go test check
        path: src
        state: success

- name: build
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: status
    tags: [containerization]
    params:
      context: build
      description: go build check
      path: src
      state: pending
  - do:
    - task: build
      tags: [containerization]
      file: ci/pipelines/tasks/build.yml
    - put: docker.cf-operator-ci
      params:
        build: src
        tag: docker/tag
    on_failure:
      put: status
      tags: [containerization]
      params:
        context: build
        description: go build check
        path: src
        state: failure
    on_success:
      put: status
      tags: [containerization]
      params:
        context: build
        decription: go build check
        path: src
        state: success

